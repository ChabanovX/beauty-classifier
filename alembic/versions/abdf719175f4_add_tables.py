"""add tables

Revision ID: abdf719175f4
Revises:
Create Date: 2025-10-19 21:03:40.117504

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "abdf719175f4"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "celebrities",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("picture", sa.LargeBinary(), nullable=False),
        sa.Column("embedding", sa.LargeBinary(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_celebrities_created_at"), "celebrities", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_celebrities_name"), "celebrities", ["name"], unique=False)
    op.create_table(
        "users",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column(
            "role",
            sa.Enum(
                "USER", "ADMIN", name="role", create_constraint=True, native_enum=False
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_created_at"), "users", ["created_at"], unique=False)
    op.create_index(op.f("ix_users_name"), "users", ["name"], unique=True)
    op.create_table(
        "inferences",
        sa.Column("attractiveness", sa.Float(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("picture", sa.LargeBinary(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_inferences_created_at"), "inferences", ["created_at"], unique=False
    )
    op.create_table(
        "inference_celebrities",
        sa.Column("inference_id", sa.Integer(), nullable=False),
        sa.Column("celebrity_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["celebrity_id"],
            ["celebrities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["inference_id"],
            ["inferences.id"],
        ),
        sa.PrimaryKeyConstraint("inference_id", "celebrity_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("inference_celebrities")
    op.drop_index(op.f("ix_inferences_created_at"), table_name="inferences")
    op.drop_table("inferences")
    op.drop_index(op.f("ix_users_name"), table_name="users")
    op.drop_index(op.f("ix_users_created_at"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_celebrities_name"), table_name="celebrities")
    op.drop_index(op.f("ix_celebrities_created_at"), table_name="celebrities")
    op.drop_table("celebrities")
    # ### end Alembic commands ###
